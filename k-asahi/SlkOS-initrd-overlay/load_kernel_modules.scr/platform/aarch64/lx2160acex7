:
###############################################################################
# Helper script: /load_kernel_modules.scr/platform/aarch64/lx2160acex7
# Purpose......: Set the Kernel modules for Hardware Models that use the 
#		 lx2160acex7 SoC within the Slackware initial RAM disk 
# 		 ('OS initrd') and the Slackware installer.
#                This script is sourced from '/load_kernel_modules'
# Author.......: Brenton Earl <el0226@slackware.com>
# Date.........: 18-Jul-2022
# Maintainer...: Brenton Earl <el0226@slackware.com>
#
# Important Note:
# * You must _append_ to the module lists (as this script does)
#   otherwise the base set of modules will not be loaded and would result in
#   a Kernel panic.
# * The initrd uses the 'bash' shell, rather than 'busybox'
#   (as in upstream/x86 Slackware). This allows you (for example)
#   to use 'fallthrough' (case statements terminated with ';&'
#   rather than ';;') within case statements and regular expression
#   matches within 'if' statements.
#   This permits the 'c'-style switch statements where you can
#   'inherit' the previous matches as you move down the cases.
#   This enables you to match on varients of boards, and inherit
#   a 'baseline' of platform modules for that board.
#
# The 'PLATWALK' match is to enable build scripts to process these
# scripts outside of the initrd environment and determine which
# modules will be loaded by a particular Hardware Model.  This must remain
# in place for all scripts.
###############################################################################

case $HWM in
   "SolidRun LX2160A Honeycomb"*|PLATWALK)
      platform_detected=1
      SOC_NAME=lx2160acex7
      echo "Architecture: ${ARCH}, Hardware model: ${HWM}, SoC: ${SOC_NAME}"
      # If one of the modules within the base list is causing problems on
      # your platform, here are the options laid out as examples:
      # USB="${USB/ehci_orion/differentmodule}" # Substitute module 'ehci_orion' with 'differentmodule'
      # USB="${USB/ehci_orion/}" # Remove the 'ehci_orion' module from the list
      MOD_GPIO+="   "
      # Drivers for PCI and other core sub systems:
      MOD_PHY+="    ahci_qoriq sdhci_of_esdhc"
      # MFD (Multi Functional Devices) drivers:
      MOD_MFD+="    "
      MOD_VIDEO+="  " # TODO: tested as headless system
      MOD_CARDS+="  " # TODO: tested without pcie card intalled 
      MOD_USB+="    dwc2 dwc3"
      MOD_NET+="    fsl_dpaa2_eth" 
      MOD_CMP+="    "
      MOD_CRYPTO+=" caam"
      # Example to detect hardware at runtime:
      #{ lspci 2>/dev/null | grep -q 'SATA cont.*ATA' ;} && MOD_XX="$MOD_XX yyy"
      # The following modules do not inherit:
      MOD_RTC="rtc-pcf2127 rtc-efi"
      # Modules for the peripherals on the Hardware Model's main board
      # (outside of the SoC itself)
      MOD_HWM="amc6821"
      # Modules for the IP blocks/peripherals embedded within the SoC:
      MOD_SOC=""

      # Define a function to run from the OS InitRD's '/init' immediately prior
      # to switching into the Slackware OS proper.
      # This is after any software RAID arrays et al have been initialised.
      # There's no current use case for this, but it may be useful in the future.
      #
      # At this stage, the following paths for Slackware OS are mounted:
      # /proc, /sys, /run, /dev
      # The root file system ('/') is mounted under /mnt
      #
      #function hwm_hook_pre_switch_root() {
      #  echo "Just about to switch into the Slackware OS proper, leaving the OS InitRD"
      #  sleep 4
      #}
      ;;
esac
